Group gAtmo     "Atmosphère"    <living>
Group gWater    "Eau"           <water>
Group gLight    "Lumière"       <light>
Group gSoil     "Sol/Substrat"  <garden>           
Group gEnv      "Environnement" <sun>
Group gDev      "Phytotron"     <greenhouse>

/* active groups */
Group:Switch:OR(ON, OFF)        Lumieres    "Toutes les lumières [(%d)]"
Group:Switch:OR(ON, OFF)        Radiateurs  "Tous les radiateurs [(%d)]"            <heating>
Group:Number:AVG                Temperature "Temperature moyenne [%.1f °C]"         <temperature>   (Status)
Group:Number:AVG                Humidity    "Humidité relative moyenne [%.1f %%]"    <humidity>          (Status)
Group:Contact:OR(OPEN, CLOSED)  Porte       "Ouverture porte [(%d)]"                <contact>

/* Lights */
Dimmer Neopixel_Intensity    "Eclairage intensité [%s]"       (gLight, Lumieres, gAdmin)   {mqtt=">[local_mqtt:phytotron/neopixel/oh/intensity:command:*:default],<[local_mqtt:phytotron/neopixel/+/intensity/OK:state:default]"}
Number Neopixel_num    "éclairage"    <light>   (gLight, Lumieres)   {mqtt=">[local_mqtt:phytotron/neopixel/oh/mode:command:*:default]"}


/* Temperature control */
Switch Heater   "Radiateur"      <heating>   (gDev, Radiateurs) {mqtt=">[local_mqtt:phytotron/arduMain/oh/ctrl/radiateur/switch:command:*:default],<[local_mqtt:phytotron/arduMain/+/ctrl/radiateur/state:state:default]"}
Switch Climate  "Compresseur"    <climate>   (gDev, Radiateurs) {mqtt=">[local_mqtt:phytotron/arduMain/oh/ctrl/clim/switch:command:*:default],<[local_mqtt:phytotron/arduMain/+/ctrl/clim/state:state:default]"}

// example of frame for temperature and humidity:
// -t "phytotron/cli/mesure/D;H;ti;hi;te;he;t3;t2;t1" 
// -m "2017-05-08;12:34:56;11;12.1;21.1;22.1;33.1;32.1;31.1"

/* Temperatures and humidity */
Number Inside_Temperature       "Temperature_Interne [%.1f °C]"         <temperature>   (Temperature, gAtmo) {mqtt="<[local_mqtt:phytotron/arduMain/+/mesure/tempIn:state:default], <[local_mqtt:phytotron/arduMain/+/mesure/D;H;ti;hi;te;he;t3;t2;t1:state:REGEX(.*;.*;(.*);.*;.*;.*;.*;.*;.*)]"}
Number Inside_Humidity          "Humidité_Interne [%.1f %%]"   <humidity>      (Humidity, gAtmo, gHumChart) {mqtt="<[local_mqtt:phytotron/arduMain/+/mesure/humidIn:state:default], <[local_mqtt:phytotron/arduMain/+/mesure/D;H;ti;hi;te;he;t3;t2;t1:state:REGEX(.*;.*;.*;(.*);.*;.*;.*;.*;.*)]"}
Number TemperatureDS1      "TDS1 ambiant [%.1f °C]"         <temperature>   (Temperature, gTempChart) {mqtt="<[local_mqtt:phytotron/arduMain/+/mesure/DS1:state:default], <[local_mqtt:phytotron/arduMain/+/mesure/D;H;ti;hi;te;he;t3;t2;t1:state:REGEX(.*;.*;.*;.*;.*;.*;.*;.*;(.*))]"}
Number TemperatureDS2      "TDS2 extérieur [%.1f °C]"         <temperature>   (gEnv, Temperature, gTempChart) {mqtt="<[local_mqtt:phytotron/arduMain/+/mesure/DS2:state:default], <[local_mqtt:phytotron/arduMain/+/mesure/D;H;ti;hi;te;he;t3;t2;t1:state:REGEX(.*;.*;.*;.*;.*;.*;.*;(.*);.*)]"}
Number TemperatureDS3      "TDS3 froid [%.1f °C]"         <temperature>   (Temperature, gTempChart) {mqtt="<[local_mqtt:phytotron/arduMain/+/mesure/DS3:state:default], <[local_mqtt:phytotron/arduMain/+/mesure/D;H;ti;hi;te;he;t3;t2;t1:state:REGEX(.*;.*;.*;.*;.*;.*;(.*);.*;.*)]"}

Number Outside_Temperature      "Temperature_Externe [%.1f °C]"         <temperature>   (gEnv, Temperature, gTempExtChart) {mqtt="<[local_mqtt:phytotron/arduMain/+/mesure/tempOut:state:default], <[local_mqtt:phytotron/arduMain/+/mesure/D;H;ti;hi;te;he;t3;t2;t1:state:REGEX(.*;.*;.*;.*;(.*);.*;.*;.*;.*)]"}
Number Outside_Humidity         "Humidité_Externe [%.1f %%]"   <humidity>      (gEnv, Humidity, gHumChart) {mqtt="<[local_mqtt:phytotron/arduMain/+/mesure/humidOut:state:default], <[local_mqtt:phytotron/arduMain/+/mesure/D;H;ti;hi;te;he;t3;t2;t1:state:REGEX(.*;.*;.*;.*;.*;(.*);.*;.*;.*)]"}

Number TempInConsigne      "Température consigne OH [%.1f °C]"   <temperature>   {mqtt="<[local_mqtt:phytotron/arduMain/+/csgn/state/D;H;t;h:state:REGEX(.*;.*;(.*);.*)], >[local_mqtt:phytotron/arduMain/oh/csgn/temp/cmd:command:*:default]"}
Number HumidityInConsigne  "Humidité consigne OH [%.1f %%]"  <humidity>   {mqtt="<[local_mqtt:phytotron/arduMain/+/csgn/state/D;H;t;h:state:REGEX(.*;.*;.*;(.*))], >[local_mqtt:phytotron/arduMain/oh/csgn/humidity/cmd:command:*:default]"}

Number TempInConsigneArduino      "Température consigne arduino [%.1f °C]"   <temperature>   {mqtt="<[local_mqtt:phytotron/arduMain/+/csgn/state/D;H;t;h:state:REGEX(.*;.*;(.*);.*)]"}
Number HumidityInConsigneArduino  "Humidité consigne arduino [%.1f %%]"  <humidity>   {mqtt="<[local_mqtt:phytotron/arduMain/+/csgn/state/D;H;t;h:state:REGEX(.*;.*;.*;(.*))]"}

/* courbes de mesure */
Number Mesures_Chart_Period     "Chart Period"                <clock>
Group gTempChart
Group gHumChart
/*  pour futurapolis, en remplacement gTempChart  */
Group gTempExtChart

/* photos */
Group gPhotos
Number  TakePicture   "Prends une photo"   {mqtt=">[local_mqtt:phytotron/camera/oh/newPicture:command:*:default]"}
// unfortunately the update with  urlImageCamera  is not taken into account
String	urlImageCamera   {mqtt="<[local_mqtt:phytotron/camera/+/urlImageCamera:state:default]"}

/* Administration items */
Group gAdmin
Number DateTimeAsk         "raffraichir heures"    <clock>   (gAdmin)   {mqtt=">[local_mqtt:phytotron/admin/oh/askTime:command:*:default], >[local_mqtt:phytotron/arduMain/oh/sendDate:command:*:default]"}
DateTime DateTimePi        "Heure systeme pi [%1$tH:%1$tM:%1$tS]"   <clock>  (gAdmin)  {mqtt="<[local_mqtt:phytotron/admin/+/piClock:state:default]"}
DateTime DateTimeArduino   "Heure arduino [%1$tH:%1$tM:%1$tS]"   <clock>  (gAdmin)  {mqtt="<[local_mqtt:phytotron/arduMain/+/sendDate/state:state:default]"}
// String PiDateTestText2     "Heure temoin text [%s]"   <clock>   (gAdmin)  {mqtt="<[local_mqtt:phytotron/admin/+/piClock:state:default]"}
// [%1$tH:%1$tM:%1$tS] 
// "Heure [%1$tA, %1$tH:%1$tM:%1$tS]"  YYYY-MM-DDTHH:MM:SS  [%1$tA, %1$td.%1$tm.%1$tY]
//Number test_ds_gp     "apparition test"                <clock>  (gAdmin)

Number   wifiAsk        "ask wifi name"      <network>     (gAdmin)     {mqtt=">[local_mqtt:phytotron/shellCmd/oh/wifiID:command:*:default]"} 
String   wifiName       "wifi name: [%s]"    <network>     (gAdmin)     {mqtt="<[local_mqtt:phytotron/shellCmd/+/wifiID/essid:state:default]"} 
String   wifiIP         "wifi IP: [%s]"      <network>     (gAdmin)     {mqtt="<[local_mqtt:phytotron/shellCmd/+/wifiID/IP:state:default]"} 
//Switch   wifiAsk        "ask wifi name"      <network>     (gAdmin)    {channel="exec:command:wificon:run"}
//String   wifiName       "wifi name: [%s]"    <network>     (gAdmin)     {channel="exec:command:wificon:output"}

Number  SelectWhatAdmin  "What do you want"    <colorpicker>   (gAdmin)   {mqtt="<[local_mqtt:phytotron/shellCmd/py/whatdoyouwant:state:default], >[local_mqtt:phytotron/shellCmd/oh/whatdoyouwant:command:*:default]"}
String  WhatAdmin       "what: [%s]"      <gas>     (gAdmin)  {mqtt="<[local_mqtt:phytotron/shellCmd/+/what:state:default], >[local_mqtt:phytotron/shellCmd/oh/goadmin:command:*:default]"} 

//Number TemperatureDemocurl "Ext. Temp. [%.1f°C]" { exec="<[curl -s http://weather.yahooapis.com/forecastrss?w=566473&u=c:60000]" }
// :XSLT(demo_yahoo_weather.xsl)

/* Test items */
Group gTest


/* Windows */

Contact Frontdoor     "Porte [MAP(en.map):%s]"  (Porte, gDev)	{mqtt="<[local_mqtt:phytotron/arduMain/+/porte/state:state:default]"}

/* Demo items */

DateTime CurrentDate            "Date [%1$tA, %1$td.%1$tm.%1$tY]"   <calendar>  { channel="ntp:ntp:demo:dateTime" }
Switch DemoSwitch               "Switch"
Number Temperature_Setpoint     "set [%.1f]"            <temperature>
Dimmer DimmedLight              "Dimmer [%d %%]"        <slider>
Color  RGBLight                 "RGB Light"             <slider>
Rollershutter DemoShutter       "Roller Shutter"
Dimmer DemoBlinds               "Blinds [%d %%]"        <rollershutter>
Number Scene_General            "Scene"                 <sofa>
Number Radio_Station            "Radio"                 <network>
Dimmer Volume                   "Volume [%.1f %%]"
Location DemoLocation           "Artilect Fablab Toulouse"
Number Wifi_Level "Wifi Level [%d/4]" <signal> (FF_Office)

String PbAvantFinFichierPhytotronItem  "configuration fichier items OK"   <smiley>
